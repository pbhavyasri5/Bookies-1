# Production Application Properties
# Use these settings for cloud deployment (Railway, Render, Heroku, etc.)

# Application name
spring.application.name=bookiesBackend

# Database connection - Use environment variables for production
# Render provides DATABASE_URL automatically for PostgreSQL
# Format: postgres://user:password@host:port/database
spring.datasource.url=${DATABASE_URL:jdbc:mysql://localhost:3306/bookies_db?useSSL=false&allowPublicKeyRetrieval=true&serverTimezone=UTC}
spring.datasource.username=${DB_USERNAME:root}
spring.datasource.password=${DB_PASSWORD:Bhavyeah#1}

# Driver class - Auto-detected by Spring Boot based on URL
# PostgreSQL: org.postgresql.Driver (for postgres:// URLs)
# MySQL: com.mysql.cj.jdbc.Driver (for jdbc:mysql:// URLs)
spring.datasource.driver-class-name=${DB_DRIVER:com.mysql.cj.jdbc.Driver}

# JPA / Hibernate settings
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false

# Database dialect - Auto-detected by Spring Boot
# PostgreSQL: org.hibernate.dialect.PostgreSQLDialect
# MySQL: org.hibernate.dialect.MySQL8Dialect
spring.jpa.properties.hibernate.dialect=${DB_DIALECT:org.hibernate.dialect.MySQL8Dialect}

# Logging configuration (less verbose in production)
logging.level.com.bookies=INFO
logging.level.org.springframework.web=WARN
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# Server port (use PORT env var from cloud platform)
server.port=${PORT:8090}

# File upload settings
spring.servlet.multipart.max-file-size=10MB
spring.servlet.multipart.max-request-size=10MB

# JWT Secret (use environment variable in production)
jwt.secret=${JWT_SECRET:your-secret-key-change-in-production}

# Frontend URL (for CORS)
frontend.url=${FRONTEND_URL:http://localhost:8080}
